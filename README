This README file contains information on the contents of the meta-xenomai-demo layer.

Please see the corresponding sections below for details.

Dependencies
============

This meta layer is supposed to be used with Raspberry PI4 (meta-raspberrypi) layer.

For more information regarding the layer setup, please consult the KAS file from:
https://source.denx.de/lukma/kas

Instructions on how to use KAS can be found here:
https://kas.readthedocs.io/en/latest/userguide.html

For impatient:
../kas/run-kas shell rpi4-xenomai4-demo.yml


Patches
=======

Please submit any patches against the meta-xenomai-demo layer directly to the maintainer:

Maintainer: Lukasz Majewski <lukma@denx.de>

Table of Contents
=================

  I. Adding the meta-xenomai-demo layer to your build
 II. Usage


I. Adding the meta-xenomai-demo layer to your build
===================================================

Run 'bitbake-layers add-layer meta-xenomai-demo'

II. Usage
=========

This meta layer turns the RPI4 model B into demo system with kernel from meta-raspberrypi
patched with Xenomai4 (i.e. it provides EVL core).

One needs to build core-image-stresstest with: bitbake core-image-stresstest
(The `bitbake xenomai4` is built against patched kernel to provide libegl).

Two test programs to generate square wave are provided - one runs in the user space
(sqw) and the another uses EVL API (x4). The wave can be observed with oscilloscope
on gpiochip0's pin 27.

It is recommended to first run `latmus -t` to callibrate the system and afterwards
use the `stress_test.sh` (from /usr/src/) script to generate some substancial workload.

The BSP also allows on-board compilation of mentioned above test programs (placed in
/usr/src directory) from sources as well as developing new one.

To setup the GPOS square wave generation program (which uses the timerfd, non-EVL
API) to run on a separate CPU3 core:
{ sqw & }; SQW_PID=$!; echo "SQW program PID: ${SQW_PID} config:"; chrt -r --pid 99 ${SQW_PID}; chrt -p ${SQW_PID}; taskset -cp 3 ${SQW_PID}

or just use the sqw-start.sh script from command line.
